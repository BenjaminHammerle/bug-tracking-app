version: '2.1'
orbs:
    docker: circleci/docker@2.2.0
jobs:
    build:
        docker:
            - image: maven:3.8.1-openjdk-17-slim
        environment:
          MAVEN_CLI_OPTS: "--batch-mode"
        steps:
            - checkout
            - run: mvn $MAVEN_CLI_OPTS -Dvaadin.offlineKey="eyJraWQiOiI1NDI3NjRlNzAwMDkwOGU2NWRjM2ZjMWRhYmY0ZTJjZDI4OTY2NzU4IiwidHlwIjoiSldUIiwiYWxnIjoiRVM1MTIifQ.eyJhbGxvd2VkUHJvZHVjdHMiOlsidmFhZGluLWNoYXJ0cyIsInZhYWRpbi10ZXN0YmVuY2giLCJ2YWFkaW4tZGVzaWduZXIiLCJ2YWFkaW4tY2hhcnQiLCJ2YWFkaW4tYm9hcmQiLCJ2YWFkaW4tY29uZmlybS1kaWFsb2ciLCJ2YWFkaW4tY29va2llLWNvbnNlbnQiLCJ2YWFkaW4tcmljaC10ZXh0LWVkaXRvciIsInZhYWRpbi1ncmlkLXBybyIsInZhYWRpbi1tYXAiLCJ2YWFkaW4tc3ByZWFkc2hlZXQtZmxvdyIsInZhYWRpbi1jcnVkIiwidmFhZGluLWNvcGlsb3QiLCJ2YWFkaW4tZGFzaGJvYXJkIl0sInN1YiI6IjVmZjQ5YTBmLTIxZDAtNDkwYi05MDE4LTJjNGNmOTgxYzA0NCIsInZlciI6MSwiaXNzIjoiVmFhZGluIiwiYWxsb3dlZEZlYXR1cmVzIjpbImNlcnRpZmljYXRpb25zIiwic3ByZWFkc2hlZXQiLCJ0ZXN0YmVuY2giLCJkZXNpZ25lciIsImNoYXJ0cyIsImJvYXJkIiwiYXBwc3RhcnRlciIsInZpZGVvdHJhaW5pbmciLCJwcm8tcHJvZHVjdHMtMjAyMjEwIl0sIm1hY2hpbmVfaWQiOm51bGwsInN1YnNjcmlwdGlvbiI6IlZhYWRpbiBQcm8iLCJzdWJzY3JpcHRpb25LZXkiOm51bGwsIm5hbWUiOiJCZW5qYW1pbiBIYW1tZXJsZSIsImJ1aWxkX3R5cGVzIjpbInByb2R1Y3Rpb24iXSwiZXhwIjoxNzUwNDY0MDAwLCJpYXQiOjE3NDY1MzkyMDYsImFjY291bnQiOiJNYW5hZ2VtZW50IENlbnRlciBJbm5zYnJ1Y2sifQ.AYrVO65SBj2IcKOR28AlXps8-jtJV5PtLmAHubERvuYbJ57MFqHUnfBlXaX0JqcxI7UNmA1OnImy3UqGGPmGtRjFAayZ2PMDJq6lDr46mB7DAs-ao_62XUKmfgnD5la3C5FFzYy1hbPguHeHS_1wvvj_N-WFgapoXf8ikPAPFb673glh" clean package -Pproduction -e
            - store_artifacts:
                path: target
                destination: target                
    test:
        docker:
            - image: maven:3.8.1-openjdk-17-slim
        steps:
            - checkout
            - run: mvn test -e
            - store_artifacts:
                  path: reports
                  destination: reports

    build-docker-image:
        docker:
            - image: cimg/azure:2025.01
        steps:
            - checkout
            - docker/install-docker-tools
            - setup_remote_docker:
                  docker_layer_caching: true
            - run:
                  name: Build and push Docker image
                  command: |
                      docker build -t vaaddockerreg.azurecr.io/vaaddockerreg:latest .
                      echo $DOCKER_PASS | docker login vaaddockerreg.azurecr.io -u $DOCKER_USER --password-stdin
                      docker push vaaddockerreg.azurecr.io/vaaddockerreg:latest
workflows:
    build-test-and-deploy:
        jobs:
            - build
            - test:
                  requires:
                      - build
            - build-docker-image

